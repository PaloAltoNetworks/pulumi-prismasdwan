Subject: [PATCH] fix minor upstream issues
---
Index: internal/provider/prismasdwan_site.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/internal/provider/prismasdwan_site.go b/internal/provider/prismasdwan_site.go
--- a/internal/provider/prismasdwan_site.go	(revision 28f4204052bc2bbcbb0278eac46345546bcdc03a)
+++ b/internal/provider/prismasdwan_site.go	(date 1719213431055)
@@ -2,6 +2,8 @@
 
 import (
 	"context"
+	"crypto/sha512"
+	"encoding/hex"
 	"fmt"
 	"net/http"
 	"os"
@@ -41,6 +43,12 @@
 	Config string `json:"config"`
 }
 
+func GenerateIdFromConfig(config string) string {
+	hashMaker := sha512.New()
+	hashMaker.Write([]byte(config))
+	return hex.EncodeToString(hashMaker.Sum(nil))
+}
+
 func NewSdwanSiteDataSource() datasource.DataSource {
 	return &sdwanSiteDataSource{}
 }
@@ -164,6 +172,7 @@
 	Config     types.String `tfsdk:"config"`
 	Timeout    types.String `tfsdk:"timeout"`
 	IsDeployed types.Bool   `tfsdk:"is_deployed"`
+	Id         types.String `tfsdk:"id"`
 }
 
 func (r *sdwanSiteResource) Metadata(_ context.Context, req resource.MetadataRequest, resp *resource.MetadataResponse) {
@@ -192,6 +201,10 @@
 			"tfid": rsschema.StringAttribute{
 				Description: "The Terraform ID for this resource.",
 				Computed:    true,
+			},
+			"id": rsschema.StringAttribute{
+				Description: "Unique identifier for this resource.",
+				Computed:    true,
 			},
 		},
 	}
@@ -283,18 +296,20 @@
 	}
 	uuid, config := tokens[0], tokens[1]
 
+	json, err := getConfigData(config)
+	if err != nil {
+		resp.Diagnostics.AddError("Error reading site JSON file/data", err.Error())
+		return
+	}
+
 	tflog.Info(ctx, "performing resource read", map[string]any{
 		"terraform_provider_function": "Read",
 		"resource_name":               "prismasdwan_site",
 		"uuid":                        uuid,
+		"id":                          GenerateIdFromConfig(string(json)),
 		"config":                      config,
 	})
 
-	json, err := getConfigData(config)
-	if err != nil {
-		resp.Diagnostics.AddError("Error reading site JSON file/data", err.Error())
-		return
-	}
 
 	path := fmt.Sprintf("/v1.0/api/sdwan/config/do_site/%s", uuid)
 	input := SdwanDoSiteRequest{
@@ -327,6 +342,7 @@
 	state.Tfid = savestate.Tfid
 	state.Timeout = savestate.Timeout
 	state.Config = types.StringValue(config)
+	state.Id = types.StringValue(GenerateIdFromConfig(string(json)))
 	state.IsDeployed = types.BoolValue(ans.IsDeployed)
 
 	resp.Diagnostics.Append(resp.State.Set(ctx, &state)...)
@@ -348,18 +364,19 @@
 	}
 	uuid := tokens[0]
 
+	json, err := getConfigData(plan.Config.ValueString())
+	if err != nil {
+		resp.Diagnostics.AddError("Error reading site JSON file/data", err.Error())
+		return
+	}
+
 	tflog.Info(ctx, "performing resource update", map[string]any{
 		"terraform_provider_function": "Update",
 		"resource_name":               "prismasdwan_site",
 		"uuid":                        uuid,
-		"config":                    plan.Config.ValueString(),
+		"config":                      plan.Config.ValueString(),
+		"id":                          GenerateIdFromConfig(plan.Config.ValueString()),
 	})
-
-	json, err := getConfigData(plan.Config.ValueString())
-	if err != nil {
-		resp.Diagnostics.AddError("Error reading site JSON file/data", err.Error())
-		return
-	}
 
 	path := fmt.Sprintf("/v1.0/api/sdwan/config/do_site/%s", uuid)
 	input := SdwanDoSiteRequest{
@@ -392,6 +409,7 @@
 	}
 	state.Timeout = plan.Timeout
 	state.Config = plan.Config
+	state.Id = types.StringValue(GenerateIdFromConfig(state.Config.ValueString()))
 	state.IsDeployed = types.BoolValue(ans.IsDeployed)
 
 	resp.Diagnostics.Append(resp.State.Set(ctx, &state)...)
@@ -416,6 +434,7 @@
 		"terraform_provider_function": "Delete",
 		"resource_name":               "prismasdwan_site",
 		"uuid":                        uuid,
+		"id":                          uuid,
 	})
 
 	json, err := getConfigData(state.Config.ValueString())
