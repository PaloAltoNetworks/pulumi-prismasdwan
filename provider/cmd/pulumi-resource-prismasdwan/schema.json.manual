{
    "name": "prismasdwan",
    "displayName": "Prisma SD-WAN",
    "description": "A Pulumi package for managing resources for Prisma SD-WAN.",
    "keywords": [
        "pulumi",
        "prismasdwan",
        "paloaltonetworks",
        "category/network"
    ],
    "homepage": "https://pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`prismasdwan` Terraform Provider](https://github.com/paloaltonetworks/terraform-provider-sdwan).",
    "repository": "https://github.com/paloaltonetworks/pulumi-prismasdwan",
    "logoUrl": "",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/paloaltonetworks/pulumi-prismasdwan/sdk/go/prismasdwan",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "java": {
            "basePackage": "com.pulumi",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageName": "@pulumi/prismasdwan",
            "packageDescription": "A Pulumi package for managing resources on Prisma SD-WAN.. Based on terraform-provider-sdwan: version v0.1.0",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/paloaltonetworks/terraform-provider-sdwan)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-prismasdwan` repo](https://github.com/paloaltonetworks/pulumi-prismasdwan/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-sdwan` repo](https://github.com/PaloAltoNetworks/terraform-provider-sdwan/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/PaloAltoNetworks/terraform-provider-sdwan)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-prismasdwan` repo](https://github.com/paloaltonetworks/pulumi-prismasdwan/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-sdwan` repo](https://github.com/PaloAltoNetworks/terraform-provider-sdwan/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "authFile": {
                "type": "string",
                "description": "The file path to the JSON file with auth creds for SCM.\n"
            },
            "authUrl": {
                "type": "string",
                "description": "The URL to send auth credentials to which will return a JWT. Default:\n`https://auth.apps.paloaltonetworks.com/auth/v1/oauth2/access_token`. Environment variable: `SCM_AUTH_URL`. JSON config\nfile variable: `auth_url`.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The client ID for the connection. Environment variable: `SCM_CLIENT_ID`. JSON config file variable: `client_id`.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The client secret for the connection. Environment variable: `SCM_CLIENT_SECRET`. JSON config file variable:\n`client_secret`.\n",
                "secret": true
            },
            "headers": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Custom HTTP headers to be sent with all API commands. Environment variable: `SCM_HEADERS`. JSON config file variable:\n`headers`.\n"
            },
            "host": {
                "type": "string",
                "description": "The hostname of Strata Cloud Manager API. Default: `api.sase.paloaltonetworks.com`. Environment variable: `SCM_HOST`.\nJSON config file variable: `host`.\n"
            },
            "logging": {
                "type": "string",
                "description": "The logging level of the provider and the underlying communication. Default: `quiet`. Environment variable:\n`SCM_LOGGING`. JSON config file variable: `logging`.\n"
            },
            "port": {
                "type": "integer",
                "description": "The port number to use for API commands, if non-standard for the given protocol. Environment variable: `SCM_PORT`. JSON\nconfig file variable: `port`.\n"
            },
            "protocol": {
                "type": "string",
                "description": "The protocol to use for SCM. This should be 'http' or 'https'. Default: `https`. Environment variable: `SCM_PROTOCOL`.\nJSON config file variable: `protocol`.\n"
            },
            "scope": {
                "type": "string",
                "description": "The client scope. Environment variable: `SCM_SCOPE`. JSON config file variable: `scope`.\n"
            }
        }
    },
    "types": {
        "prismasdwan:index/pullSite": {
            "properties": {
                "site_name": {
                    "type": "string",
                    "description": "The site whose config should be retrieved.\n"
                },
                "config": {
                    "type": "string",
                    "description": "The site config.\n"
                },
                "modifications": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Name param.\n"
                }
            },
            "type": "object",
            "required": [
                "site_name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prismasdwan:index/pullSiteRequest": {
            "properties": {
                "site_name": {
                    "type": "string",
                    "description": "The site whose config should be retrieved.\n"
                },
                "config": {
                    "type": "string",
                    "description": "The site config.\n"
                },
                "modifications": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Name param.\n"
                }
            },
            "type": "object",
            "required": [
                "site_name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },

        "scm:index/getSnippetFolder:getSnippetFolder": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The Id param.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name param.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the prismasdwan package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "authFile": {
                "type": "string",
                "description": "The file path to the JSON file with auth creds for SCM.\n"
            },
            "authUrl": {
                "type": "string",
                "description": "The URL to send auth credentials to which will return a JWT. Default:\n`https://auth.apps.paloaltonetworks.com/auth/v1/oauth2/access_token`. Environment variable: `SCM_AUTH_URL`. JSON config\nfile variable: `auth_url`.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The client ID for the connection. Environment variable: `SCM_CLIENT_ID`. JSON config file variable: `client_id`.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The client secret for the connection. Environment variable: `SCM_CLIENT_SECRET`. JSON config file variable:\n`client_secret`.\n",
                "secret": true
            },
            "headers": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Custom HTTP headers to be sent with all API commands. Environment variable: `SCM_HEADERS`. JSON config file variable:\n`headers`.\n"
            },
            "host": {
                "type": "string",
                "description": "The hostname of Strata Cloud Manager API. Default: `api.sase.paloaltonetworks.com`. Environment variable: `SCM_HOST`.\nJSON config file variable: `host`.\n"
            },
            "logging": {
                "type": "string",
                "description": "The logging level of the provider and the underlying communication. Default: `quiet`. Environment variable:\n`SCM_LOGGING`. JSON config file variable: `logging`.\n"
            },
            "port": {
                "type": "integer",
                "description": "The port number to use for API commands, if non-standard for the given protocol. Environment variable: `SCM_PORT`. JSON\nconfig file variable: `port`.\n"
            },
            "protocol": {
                "type": "string",
                "description": "The protocol to use for SCM. This should be 'http' or 'https'. Default: `https`. Environment variable: `SCM_PROTOCOL`.\nJSON config file variable: `protocol`.\n"
            },
            "scope": {
                "type": "string",
                "description": "The client scope. Environment variable: `SCM_SCOPE`. JSON config file variable: `scope`.\n"
            }
        },
        "inputProperties": {
            "authFile": {
                "type": "string",
                "description": "The file path to the JSON file with auth creds for SCM.\n"
            },
            "authUrl": {
                "type": "string",
                "description": "The URL to send auth credentials to which will return a JWT. Default:\n`https://auth.apps.paloaltonetworks.com/auth/v1/oauth2/access_token`. Environment variable: `SCM_AUTH_URL`. JSON config\nfile variable: `auth_url`.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The client ID for the connection. Environment variable: `SCM_CLIENT_ID`. JSON config file variable: `client_id`.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The client secret for the connection. Environment variable: `SCM_CLIENT_SECRET`. JSON config file variable:\n`client_secret`.\n",
                "secret": true
            },
            "headers": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Custom HTTP headers to be sent with all API commands. Environment variable: `SCM_HEADERS`. JSON config file variable:\n`headers`.\n"
            },
            "host": {
                "type": "string",
                "description": "The hostname of Strata Cloud Manager API. Default: `api.sase.paloaltonetworks.com`. Environment variable: `SCM_HOST`.\nJSON config file variable: `host`.\n"
            },
            "logging": {
                "type": "string",
                "description": "The logging level of the provider and the underlying communication. Default: `quiet`. Environment variable:\n`SCM_LOGGING`. JSON config file variable: `logging`.\n"
            },
            "port": {
                "type": "integer",
                "description": "The port number to use for API commands, if non-standard for the given protocol. Environment variable: `SCM_PORT`. JSON\nconfig file variable: `port`.\n"
            },
            "protocol": {
                "type": "string",
                "description": "The protocol to use for SCM. This should be 'http' or 'https'. Default: `https`. Environment variable: `SCM_PROTOCOL`.\nJSON config file variable: `protocol`.\n"
            },
            "scope": {
                "type": "string",
                "description": "The client scope. Environment variable: `SCM_SCOPE`. JSON config file variable: `scope`.\n"
            }
        }
    },
    "resources": {
        "prismasdwan:index/serviceConnection:ServiceConnection": {
            "description": "Retrieves a config item.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as scm from \"@pulumi/scm\";\n\nconst example = new scm.ServiceConnection(\"example\", {});\n```\n```python\nimport pulumi\nimport pulumi_scm as scm\n\nexample = scm.ServiceConnection(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Scm = Pulumi.Scm;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Scm.ServiceConnection(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/paloaltonetworks/pulumi-prismasdwan/sdk/go/scm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := scm.NewServiceConnection(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.scm.ServiceConnection;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServiceConnection(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: scm:ServiceConnection\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "backupSC": {
                    "type": "string",
                    "description": "The BackupSC param.\n"
                },
                "bgpPeer": {
                    "$ref": "#/types/scm:index/ServiceConnectionBgpPeer:ServiceConnectionBgpPeer",
                    "description": "The BgpPeer param.\n"
                },
                "encryptedValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Internal use) Encrypted values returned from the API.\n",
                    "secret": true
                },
                "folder": {
                    "type": "string",
                    "description": "The Folder param. String can either be a specific string(`\"Service Connections\"`) or match this regex: `^[0-9a-zA-Z._\\s-]{1,}$`. Default: `\"Service Connections\"`.\n"
                },
                "ipsecTunnel": {
                    "type": "string",
                    "description": "The IpsecTunnel param.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name param.\n"
                },
                "natPool": {
                    "type": "string",
                    "description": "The NatPool param.\n"
                },
                "noExportCommunity": {
                    "type": "string",
                    "description": "The NoExportCommunity param. String must be one of these: `\"Disabled\"`, `\"Enabled-In\"`, `\"Enabled-Out\"`, `\"Enabled-Both\"`.\n"
                },
                "onboardingType": {
                    "type": "string",
                    "description": "The OnboardingType param. String must be one of these: `\"classic\"`. Default: `\"classic\"`.\n"
                },
                "protocol": {
                    "$ref": "#/types/scm:index/ServiceConnectionProtocol:ServiceConnectionProtocol",
                    "description": "The Protocol param.\n"
                },
                "qos": {
                    "$ref": "#/types/scm:index/ServiceConnectionQos:ServiceConnectionQos",
                    "description": "The Qos param.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The Region param.\n"
                },
                "secondaryIpsecTunnel": {
                    "type": "string",
                    "description": "The SecondaryIpsecTunnel param.\n"
                },
                "sourceNat": {
                    "type": "boolean",
                    "description": "The SourceNat param.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Subnets param.\n"
                },
                "tfid": {
                    "type": "string"
                }
            },
            "required": [
                "encryptedValues",
                "folder",
                "ipsecTunnel",
                "name",
                "onboardingType",
                "region",
                "tfid"
            ],
            "inputProperties": {
                "backupSC": {
                    "type": "string",
                    "description": "The BackupSC param.\n"
                },
                "bgpPeer": {
                    "$ref": "#/types/scm:index/ServiceConnectionBgpPeer:ServiceConnectionBgpPeer",
                    "description": "The BgpPeer param.\n"
                },
                "folder": {
                    "type": "string",
                    "description": "The Folder param. String can either be a specific string(`\"Service Connections\"`) or match this regex: `^[0-9a-zA-Z._\\s-]{1,}$`. Default: `\"Service Connections\"`.\n"
                },
                "ipsecTunnel": {
                    "type": "string",
                    "description": "The IpsecTunnel param.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name param.\n"
                },
                "natPool": {
                    "type": "string",
                    "description": "The NatPool param.\n"
                },
                "noExportCommunity": {
                    "type": "string",
                    "description": "The NoExportCommunity param. String must be one of these: `\"Disabled\"`, `\"Enabled-In\"`, `\"Enabled-Out\"`, `\"Enabled-Both\"`.\n"
                },
                "onboardingType": {
                    "type": "string",
                    "description": "The OnboardingType param. String must be one of these: `\"classic\"`. Default: `\"classic\"`.\n"
                },
                "protocol": {
                    "$ref": "#/types/scm:index/ServiceConnectionProtocol:ServiceConnectionProtocol",
                    "description": "The Protocol param.\n"
                },
                "qos": {
                    "$ref": "#/types/scm:index/ServiceConnectionQos:ServiceConnectionQos",
                    "description": "The Qos param.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The Region param.\n"
                },
                "secondaryIpsecTunnel": {
                    "type": "string",
                    "description": "The SecondaryIpsecTunnel param.\n"
                },
                "sourceNat": {
                    "type": "boolean",
                    "description": "The SourceNat param.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Subnets param.\n"
                }
            },
            "requiredInputs": [
                "ipsecTunnel",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceConnection resources.\n",
                "properties": {
                    "backupSC": {
                        "type": "string",
                        "description": "The BackupSC param.\n"
                    },
                    "bgpPeer": {
                        "$ref": "#/types/scm:index/ServiceConnectionBgpPeer:ServiceConnectionBgpPeer",
                        "description": "The BgpPeer param.\n"
                    },
                    "encryptedValues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "(Internal use) Encrypted values returned from the API.\n",
                        "secret": true
                    },
                    "folder": {
                        "type": "string",
                        "description": "The Folder param. String can either be a specific string(`\"Service Connections\"`) or match this regex: `^[0-9a-zA-Z._\\s-]{1,}$`. Default: `\"Service Connections\"`.\n"
                    },
                    "ipsecTunnel": {
                        "type": "string",
                        "description": "The IpsecTunnel param.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Name param.\n"
                    },
                    "natPool": {
                        "type": "string",
                        "description": "The NatPool param.\n"
                    },
                    "noExportCommunity": {
                        "type": "string",
                        "description": "The NoExportCommunity param. String must be one of these: `\"Disabled\"`, `\"Enabled-In\"`, `\"Enabled-Out\"`, `\"Enabled-Both\"`.\n"
                    },
                    "onboardingType": {
                        "type": "string",
                        "description": "The OnboardingType param. String must be one of these: `\"classic\"`. Default: `\"classic\"`.\n"
                    },
                    "protocol": {
                        "$ref": "#/types/scm:index/ServiceConnectionProtocol:ServiceConnectionProtocol",
                        "description": "The Protocol param.\n"
                    },
                    "qos": {
                        "$ref": "#/types/scm:index/ServiceConnectionQos:ServiceConnectionQos",
                        "description": "The Qos param.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The Region param.\n"
                    },
                    "secondaryIpsecTunnel": {
                        "type": "string",
                        "description": "The SecondaryIpsecTunnel param.\n"
                    },
                    "sourceNat": {
                        "type": "boolean",
                        "description": "The SourceNat param.\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Subnets param.\n"
                    },
                    "tfid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "scm:index/snippet:Snippet": {
            "description": "Retrieves a config item.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as scm from \"@pulumi/scm\";\n\nconst example = new scm.Snippet(\"example\", {});\n```\n```python\nimport pulumi\nimport pulumi_scm as scm\n\nexample = scm.Snippet(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Scm = Pulumi.Scm;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Scm.Snippet(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/paloaltonetworks/pulumi-prismasdwan/sdk/go/scm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := scm.NewSnippet(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.scm.Snippet;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Snippet(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: scm:Snippet\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "createdIn": {
                    "type": "string",
                    "description": "The CreatedIn param.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Description param.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The DisplayName param.\n"
                },
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scm:index/SnippetFolder:SnippetFolder"
                    },
                    "description": "The Folders param.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Labels param.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "The LastUpdate param.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name param.\n"
                },
                "sharedIn": {
                    "type": "string",
                    "description": "The SharedIn param.\n"
                },
                "tfid": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The Type param. String must be one of these: `\"predefined\"`.\n"
                }
            },
            "required": [
                "createdIn",
                "displayName",
                "folders",
                "lastUpdate",
                "name",
                "sharedIn",
                "tfid",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The Description param.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Labels param.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Name param.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Snippet resources.\n",
                "properties": {
                    "createdIn": {
                        "type": "string",
                        "description": "The CreatedIn param.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Description param.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The DisplayName param.\n"
                    },
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scm:index/SnippetFolder:SnippetFolder"
                        },
                        "description": "The Folders param.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Labels param.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "The LastUpdate param.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Name param.\n"
                    },
                    "sharedIn": {
                        "type": "string",
                        "description": "The SharedIn param.\n"
                    },
                    "tfid": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Type param. String must be one of these: `\"predefined\"`.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "scm:index/getSnippet:getSnippet": {
            "description": "Retrieves a config item.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as scm from \"@pulumi/scm\";\n\nconst example = scm.getSnippet({\n    id: \"1234-56-789\",\n});\n```\n```python\nimport pulumi\nimport pulumi_scm as scm\n\nexample = scm.get_snippet(id=\"1234-56-789\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Scm = Pulumi.Scm;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Scm.GetSnippet.Invoke(new()\n    {\n        Id = \"1234-56-789\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/paloaltonetworks/pulumi-prismasdwan/sdk/go/scm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := scm.LookupSnippet(ctx, \u0026scm.LookupSnippetArgs{\n\t\t\tId: \"1234-56-789\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.scm.ScmFunctions;\nimport com.pulumi.scm.inputs.GetSnippetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ScmFunctions.getSnippet(GetSnippetArgs.builder()\n            .id(\"1234-56-789\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: scm:getSnippet\n      Arguments:\n        id: 1234-56-789\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSnippet.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Id param.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSnippet.\n",
                "properties": {
                    "createdIn": {
                        "description": "The CreatedIn param.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "The Description param.\n",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "The DisplayName param.\n",
                        "type": "string"
                    },
                    "folders": {
                        "description": "The Folders param.\n",
                        "items": {
                            "$ref": "#/types/scm:index/getSnippetFolder:getSnippetFolder"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The Id param.\n",
                        "type": "string"
                    },
                    "labels": {
                        "description": "The Labels param.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "lastUpdate": {
                        "description": "The LastUpdate param.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The Name param.\n",
                        "type": "string"
                    },
                    "sharedIn": {
                        "description": "The SharedIn param.\n",
                        "type": "string"
                    },
                    "tfid": {
                        "type": "string"
                    },
                    "type": {
                        "description": "The Type param. String must be one of these: `\"predefined\"`.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "createdIn",
                    "description",
                    "displayName",
                    "folders",
                    "id",
                    "labels",
                    "lastUpdate",
                    "name",
                    "sharedIn",
                    "tfid",
                    "type"
                ],
                "type": "object"
            }
        }
    }
}